@using System.ComponentModel
@using Circuits.ViewModels.Entities.Elements

<CascadingValue Name="SchemeRenderReference" IsFixed="true" Value="this">
    @ChildContent

    <div id="@_id"
         class="scheme-renderer-container"
         @onclick="OnContainerClicked"
         @onmouseup="OnContainerUpAsync"
         @onmousedown="OnContainerDownAsync"
         @onmousedown:stopPropagation="SchemeRendererContext.PencilMode"
         @onextdrop="OnDrop"
         ondragover="event.preventDefault();">

        <div id="@_contentId"
             class="scheme-content"
             style="@($"background-size: {CellSize}px {CellSize}px;")">

            @foreach (var element in _schemeService.Elements)
            {
                @if (_elementComponents.TryGetValue(element.GetType(), out var component))
                {
                    @component.Template(element)
                }
            }

            @if (SchemeRendererContext.PencilMode)
            {
                @if (_firstPointSet)
                {
                    <div
                        style="@($"left: calc({(_firstPointPos.X - 10.0f).ToString(_nF)}px + 1.75px); top: calc({(_firstPointPos.Y - 10.0f).ToString(_nF)}px + 1.75px);")"
                        class="wire-pointer">
                        <div class="center"></div>
                    </div>
                }

                <div
                    style="@($"left: calc({(_elementPointerPos.X - 10.0f).ToString(_nF)}px + 1.75px); top: calc({(_elementPointerPos.Y - 10.0f).ToString(_nF)}px + 1.75px);")"
                    class="@($"wire-pointer {(!_firstMouseMove ? "first" : "")}")">
                    <div class="center"></div>
                </div>
            }

        </div>

    </div>

</CascadingValue>