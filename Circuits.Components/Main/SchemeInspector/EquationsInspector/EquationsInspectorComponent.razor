@using Circuits.Services.Extensions
@using Circuits.ViewModels.Entities.Structures

<div class="equation-inspector">

    <div class="scroller">
        <div class="commands">
            <div class="btn noselectable-text"
                 @onclick="OnBuildEquationSystems">
                Build Equation Systems
            </div>

            <div class="btn noselectable-text"
                 @onclick="OnPerformGaussianElimination">
                Perform Gaussian Elimination
            </div>

            <div class="btn noselectable-text"
                 @onclick="OnClear">
                Clear Scheme
            </div>
        </div>

        <div class="separator">
            <div class="line"></div>
        </div>

        <div class="circuits">

            <BCHSelect TItem="Branch"
                       Options="@_schemeService.Branches"
                       Height="300"
                       Width="120"
                       Filtering="false"
                       Grouping="false"
                       MultipleSelect="true"
                       DefaultText="Branches"
                       ElementNamePredicate='x => $"branch {((List<Branch>)_schemeService.Branches).IndexOf(x)}"'
                       SelectedItems="_selectedBranches"
                       OnSelectItem="(e) => { OnBranchSelected(e, true); }"
                       OnDeselectItem="(e) => { OnBranchSelected(e, false); }">

                <RowTemplate Context="branch">
                    <div class="branch-wrapper">
                        <div class="name noselectable-text">Branch <i class="noselectable-text">@($"{((List<Branch>)_schemeService.Branches).IndexOf(branch)}")</i></div>
                        <div class="controls">
                            <div
                                @onclick="() => { OnShowBranchDirectionClicked(branch); }"
                                @onclick:stopPropagation
                                class="@($"icon {(_highlightService.ShouldShowDirection(branch) ? "selected" : "")}")">
                                D
                            </div>
                        </div>
                    </div>
                </RowTemplate>

            </BCHSelect>

            @for (var i = 0; i < _schemeService.Graphs.Count; i++)
            {
                var graph = _schemeService.Graphs[i];

                <BCHSelect TItem="Circuit"
                           Width="120"
                           Options="@graph.Circuits"
                           Height="300"
                           Filtering="false"
                           Grouping="false"
                           MultipleSelect="true"
                           DefaultText="@($"Graph {i}")"
                           ElementNamePredicate='x => $"circuit {graph.Circuits.IndexOf(x)}"'
                           OnSelectItem="(e) => { OnSelectCircuit(e, true); }"
                           OnDeselectItem="(e) => { OnSelectCircuit(e, false); }">

                    <RowTemplate Context="circuit">
                        <div class="circuit-wrapper">
                            <div class="name noselectable-text">Circuit <i class="noselectable-text">@(graph.Circuits.IndexOf(circuit))</i></div>
                            <div class="controls">
                                <div
                                    @onclick="() => { OnShowCircuitDirectionClicked(circuit); }"
                                    @onclick:stopPropagation
                                    class="@($"icon {(_highlightService.ShouldShowDirection(circuit) ? "selected" : "")}")">
                                    D
                                </div>
                            </div>
                        </div>
                    </RowTemplate>

                </BCHSelect>
            }
        </div>

        <div class="equations">
            @foreach (var equationSystem in _schemeService.EquationSystems)
            {
                <div class="separator">
                    <div class="line"></div>
                </div>

                <div class="equation-system-container">
                    <GraphEquationSystemComponent EquationSystem="equationSystem"/>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .equation-inspector > .scroller .circuits > .bch-select-container {
        display: inline-block;
        margin: 5px;
    }
</style>