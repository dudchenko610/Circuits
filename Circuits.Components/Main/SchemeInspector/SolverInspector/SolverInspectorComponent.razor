@using Circuits.ViewModels.Entities.Structures
@using Circuits.Components.Main.SchemeInspector.SolverInspector.SolverEquationBlock
@using Circuits.ViewModels.Entities.Equations

<div class="solver-inspector scroll">
    <div class="scroller">
        <div class="equations">
            @foreach (var equationSystem in SchemeService.EquationSystems)
            {
                var index = ((List<EquationSystem>) SchemeService.EquationSystems).IndexOf(equationSystem);
                
                <SolverEquationBlockComponent @key="equationSystem" EquationSystem="equationSystem">
                    <GraphDetailsTemplate Context="graph">
                        @{
                            var graphBranches = graph.Circuits.SelectMany(circuit => circuit.Branches).ToList();
                            var circuitBranches = graph.Circuits
                                .SelectMany(c => c.Branches
                                    .Select(b => new CircuitBranch
                                    {
                                        Circuit = c,
                                        Branch = b
                                    }));

                            <BCHSelect TItem="CircuitBranch"
                                       Width="120"
                                       Options="@circuitBranches"
                                       Height="300"
                                       Filtering="false"
                                       Grouping="true"
                                       MultipleSelect="true"
                                       DefaultText="@($"Graph {index}")"
                                       GroupPredicate="x => x.Circuit"
                                       FilterByPredicate='x => $"branch {x.Circuit.Branches.IndexOf(x.Branch)}"'
                                       OnSelectItem="(e) => { OnBranchSelected(e.Branch, true); }"
                                       OnDeselectItem="(e) => { OnBranchSelected(e.Branch, false); }">

                                <GroupTemplate Context="circuitObj">
                                    @{ var circuit = (Circuit)circuitObj!; }

                                    <div class="circuit-wrapper">
                                        <div class="name noselectable-text">Circuit <i class="noselectable-text">@(graph.Circuits.IndexOf(circuit))</i></div>
                                        <div class="controls">
                                            <div
                                                @onclick="() => { OnShowCircuitDirectionClicked(circuit); }"
                                                @onclick:stopPropagation
                                                class="@($"icon {(HighlightService.ShouldShowDirection(circuit) ? "selected" : "")}")">
                                                D
                                            </div>
                                        </div>
                                    </div>
                                </GroupTemplate>

                                <RowTemplate Context="cb">
                                    <div class="branch-wrapper">
                                        <div class="name noselectable-text">Branch <i class="noselectable-text">@(graphBranches.IndexOf(cb.Branch))</i></div>
                                        <div class="controls">
                                            <div
                                                @onclick="() => { OnShowBranchDirectionClicked(cb.Branch); }"
                                                @onclick:stopPropagation
                                                class="@($"icon {(HighlightService.ShouldShowDirection(cb.Branch) ? "selected" : "")}")">
                                                D
                                            </div>
                                        </div>
                                    </div>
                                </RowTemplate>

                            </BCHSelect>
                        }
                    </GraphDetailsTemplate>
                </SolverEquationBlockComponent>

                <div class="separator">
                    <div class="line"></div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .equation-inspector > .scroller .circuits > .bch-select-container {
        display: inline-block;
        margin: 5px;
    }
</style>