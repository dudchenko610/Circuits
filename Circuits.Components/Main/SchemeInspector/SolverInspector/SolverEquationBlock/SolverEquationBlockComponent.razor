@using Circuits.ViewModels.Entities.Equations
@{
    var graph = SchemeService.Graphs[((List<EquationSystem>)SchemeService.EquationSystems).IndexOf(EquationSystem)];
}

<div class="equation-system-container">
    <div class="control-block">
        <div class="left">
            <div class="line">
                <div class="text noselectable-text">DeltaTime:</div>
                <div class="input-wrapper">
                    <BCHNumberInput TValue="float" @bind-Value="_dt"/>
                </div>
            </div>

            <div class="line">
                <div class="text noselectable-text">Iteration Number:</div>
                <div class="input-wrapper">
                    <input type="number"
                           placeholder="Type Number"
                           @bind-value="_iterationCount"
                           @bind-value:event="oninput"/>
                </div>
            </div>
        </div>
        <div class="right">
            @GraphDetailsTemplate(graph)
        </div>
    </div>


    @if (SolverService.SolverState.TryGetValue(EquationSystem, out var state))
    {
        <div class="system-controls">

            @if (state.Status == "Completed")
            {
                <ControlButtonComponent Color="#00A86B"
                                        BorderColor="#00A86B"
                                        Label="Run"
                                        OnClick="RunSolverAsync"/>
            }
            else
            {
                <ControlButtonComponent Color="#D2101B"
                                        BorderColor="#D2101B"
                                        Label="Stop"
                                        OnClick="StopSolverAsync"/>
            }

            <div class="status noselectable-text btn @($"{(state.Status == "Completed" ? "completed" : "")}")">
                @state.Status
            </div>
        </div>
    }
    else
    {
        <div class="system-controls">
            <ControlButtonComponent Color="#00A86B"
                                    BorderColor="#00A86B"
                                    Label="Run"
                                    OnClick="RunSolverAsync"/>
        </div>
    }

    <div class="system-equations">
        <GraphEquationSystemComponent EquationSystem="EquationSystem"/>
    </div>
</div>

<style>
    .equation-system-container > .control-block > .left > .line > .input-wrapper > input {
        font-family: Nunito;
        font-size: 10px;
        font-style: normal;
        font-weight: 400;
        line-height: 14px;
        letter-spacing: 0.3428572118282318px;
        color: #030229;
        caret-color: #030229;
        outline: none;
        text-indent: 14px;
                
        flex: 1 1;
        height: 18px;
        background: transparent;
        border: none;
        margin: auto;
        padding: 0;
    }
                
    .equation-system-container > .control-block > .left > .line > .input-wrapper > input::placeholder {
        color: rgba(3, 2, 41, 0.4);
    }
</style>